% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/html.R
\name{html_text}
\alias{html_text}
\alias{html_name}
\alias{html_attrs}
\alias{html_attr}
\title{Extract attributes, text, or tag name}
\usage{
html_text(x, trim = FALSE)

html_name(x)

html_attrs(x)

html_attr(x, name, default = NA_character_)
}
\arguments{
\item{x}{A document, node, or node set.}

\item{trim}{If \code{TRUE} will trim leading and trailing spaces.}

\item{name}{Name of attribute to retrieve.}

\item{default}{A string used as a default value when the attribute does
not exist in every node.}
}
\value{
A character vector (for \code{html_attr()}, \code{html_tag()}, and
\code{html_text()}) or list (\code{html_attrs()}) the same length as \code{x}
}
\description{
\code{html_text()} extracts text inside a node, \code{html_attr()} extract a
single attribute, \code{html_attr()} extract all attributes, and \code{html_name()}
gives the tag name.
}
\examples{
url <- "https://en.wikipedia.org/wiki/The_Lego_Movie"
movie <- read_html(url)
cast <- html_nodes(movie, "tr:nth-child(8) .plainlist a")

html_text(cast)
html_name(cast)
html_attrs(cast)
html_attr(cast, "href")

# If needed, use url_absolute() to convert to complete urls
url_absolute(html_attr(cast, "href"), url)
}

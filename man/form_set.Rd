% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/form-submit.R
\name{form_set}
\alias{form_set}
\alias{form_submit}
\title{Modify and submit a form}
\usage{
form_set(form, ...)

form_submit(form, session, submit = NULL, ...)
}
\arguments{
\item{form}{An \code{\link[=html_form]{html_form()}}.}

\item{...}{<\code{\link[rlang:dyn-dots]{dynamic-dots}}> Name-value pairs giving
fields to modify.

Provide a character vector to set multiple checkboxes in a set or
select multiple values from a multi-select.}

\item{session}{An \code{\link[=html_session]{html_session()}}.}

\item{submit}{Which button should be used?
\itemize{
\item \code{NULL}, the default, uses the first.
\item A string selects a button by its name.
\item A number selects a button based on it relative position.
}}
}
\value{
\code{form_set()} returns an updated form object;
\code{form_submit()} returns an HTML session object.
HTTP request fails).
}
\description{
Once you've extracted a form from a page with \code{\link[=html_form]{html_form()}} use
\code{\link[=form_set]{form_set()}} to modify its values and \code{\link[=form_submit]{form_submit()}} to submit it.
}
\examples{
session <- html_session("http://www.google.com")
search <- html_form(session)[[1]]

\dontrun{
search \%>\%
  set_values(q = "My little pony", hl = "fr") \%>\%
  submit_form(session)
}

# If you have a list of values, use !!!
vals <- list(q = "web scraping", hl = "en")
search \%>\% set_values(!!!vals)
}
